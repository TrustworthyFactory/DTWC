package com.thalesgroup.dtwc.protege;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: SystemDescription <br>
 * @version generated on Wed Oct 08 11:02:03 CEST 2014 by t0013577
 */

public interface SystemDescription extends WrappedIndividual {

    /* ***************************************************
     * Property http://www.optet.eu/ns/DigitalTrustworthinessCertificate#hasAsset
     */
     
    /**
     * Gets all property values for the hasAsset property.<p>
     * 
     * @returns a collection of values for the hasAsset property.
     */
    Collection<? extends WrappedIndividual> getHasAsset();

    /**
     * Checks if the class has a hasAsset property value.<p>
     * 
     * @return true if there is a hasAsset property value.
     */
    boolean hasHasAsset();

    /**
     * Adds a hasAsset property value.<p>
     * 
     * @param newHasAsset the hasAsset property value to be added
     */
    void addHasAsset(WrappedIndividual newHasAsset);

    /**
     * Removes a hasAsset property value.<p>
     * 
     * @param oldHasAsset the hasAsset property value to be removed.
     */
    void removeHasAsset(WrappedIndividual oldHasAsset);


    /* ***************************************************
     * Property http://www.optet.eu/ns/DigitalTrustworthinessCertificate#hasPart
     */
     
    /**
     * Gets all property values for the hasPart property.<p>
     * 
     * @returns a collection of values for the hasPart property.
     */
    Collection<? extends WrappedIndividual> getHasPart();

    /**
     * Checks if the class has a hasPart property value.<p>
     * 
     * @return true if there is a hasPart property value.
     */
    boolean hasHasPart();

    /**
     * Adds a hasPart property value.<p>
     * 
     * @param newHasPart the hasPart property value to be added
     */
    void addHasPart(WrappedIndividual newHasPart);

    /**
     * Removes a hasPart property value.<p>
     * 
     * @param oldHasPart the hasPart property value to be removed.
     */
    void removeHasPart(WrappedIndividual oldHasPart);


    /* ***************************************************
     * Property http://www.optet.eu/ns/DigitalTrustworthinessCertificate#hasStakeholder
     */
     
    /**
     * Gets all property values for the hasStakeholder property.<p>
     * 
     * @returns a collection of values for the hasStakeholder property.
     */
    Collection<? extends WrappedIndividual> getHasStakeholder();

    /**
     * Checks if the class has a hasStakeholder property value.<p>
     * 
     * @return true if there is a hasStakeholder property value.
     */
    boolean hasHasStakeholder();

    /**
     * Adds a hasStakeholder property value.<p>
     * 
     * @param newHasStakeholder the hasStakeholder property value to be added
     */
    void addHasStakeholder(WrappedIndividual newHasStakeholder);

    /**
     * Removes a hasStakeholder property value.<p>
     * 
     * @param oldHasStakeholder the hasStakeholder property value to be removed.
     */
    void removeHasStakeholder(WrappedIndividual oldHasStakeholder);


    /* ***************************************************
     * Property http://www.optet.eu/ns/DigitalTrustworthinessCertificate#ID
     */
     
    /**
     * Gets all property values for the ID property.<p>
     * 
     * @returns a collection of values for the ID property.
     */
    Collection<? extends String> getID();

    /**
     * Checks if the class has a ID property value.<p>
     * 
     * @return true if there is a ID property value.
     */
    boolean hasID();

    /**
     * Adds a ID property value.<p>
     * 
     * @param newID the ID property value to be added
     */
    void addID(String newID);

    /**
     * Removes a ID property value.<p>
     * 
     * @param oldID the ID property value to be removed.
     */
    void removeID(String oldID);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
