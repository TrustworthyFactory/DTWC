package com.thalesgroup.dtwc.protege;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Component <br>
 * @version generated on Wed Oct 08 11:02:03 CEST 2014 by t0013577
 */

public interface Component extends WrappedIndividual {

    /* ***************************************************
     * Property http://www.optet.eu/ns/DigitalTrustworthinessCertificate#hasAssociatedStakeholder
     */
     
    /**
     * Gets all property values for the hasAssociatedStakeholder property.<p>
     * 
     * @returns a collection of values for the hasAssociatedStakeholder property.
     */
    Collection<? extends WrappedIndividual> getHasAssociatedStakeholder();

    /**
     * Checks if the class has a hasAssociatedStakeholder property value.<p>
     * 
     * @return true if there is a hasAssociatedStakeholder property value.
     */
    boolean hasHasAssociatedStakeholder();

    /**
     * Adds a hasAssociatedStakeholder property value.<p>
     * 
     * @param newHasAssociatedStakeholder the hasAssociatedStakeholder property value to be added
     */
    void addHasAssociatedStakeholder(WrappedIndividual newHasAssociatedStakeholder);

    /**
     * Removes a hasAssociatedStakeholder property value.<p>
     * 
     * @param oldHasAssociatedStakeholder the hasAssociatedStakeholder property value to be removed.
     */
    void removeHasAssociatedStakeholder(WrappedIndividual oldHasAssociatedStakeholder);


    /* ***************************************************
     * Property http://www.optet.eu/ns/DigitalTrustworthinessCertificate#hasBehaviour
     */
     
    /**
     * Gets all property values for the hasBehaviour property.<p>
     * 
     * @returns a collection of values for the hasBehaviour property.
     */
    Collection<? extends WrappedIndividual> getHasBehaviour();

    /**
     * Checks if the class has a hasBehaviour property value.<p>
     * 
     * @return true if there is a hasBehaviour property value.
     */
    boolean hasHasBehaviour();

    /**
     * Adds a hasBehaviour property value.<p>
     * 
     * @param newHasBehaviour the hasBehaviour property value to be added
     */
    void addHasBehaviour(WrappedIndividual newHasBehaviour);

    /**
     * Removes a hasBehaviour property value.<p>
     * 
     * @param oldHasBehaviour the hasBehaviour property value to be removed.
     */
    void removeHasBehaviour(WrappedIndividual oldHasBehaviour);


    /* ***************************************************
     * Property http://www.optet.eu/ns/DigitalTrustworthinessCertificate#hasPart
     */
     
    /**
     * Gets all property values for the hasPart property.<p>
     * 
     * @returns a collection of values for the hasPart property.
     */
    Collection<? extends WrappedIndividual> getHasPart();

    /**
     * Checks if the class has a hasPart property value.<p>
     * 
     * @return true if there is a hasPart property value.
     */
    boolean hasHasPart();

    /**
     * Adds a hasPart property value.<p>
     * 
     * @param newHasPart the hasPart property value to be added
     */
    void addHasPart(WrappedIndividual newHasPart);

    /**
     * Removes a hasPart property value.<p>
     * 
     * @param oldHasPart the hasPart property value to be removed.
     */
    void removeHasPart(WrappedIndividual oldHasPart);


    /* ***************************************************
     * Property http://www.optet.eu/ns/DigitalTrustworthinessCertificate#ID
     */
     
    /**
     * Gets all property values for the ID property.<p>
     * 
     * @returns a collection of values for the ID property.
     */
    Collection<? extends String> getID();

    /**
     * Checks if the class has a ID property value.<p>
     * 
     * @return true if there is a ID property value.
     */
    boolean hasID();

    /**
     * Adds a ID property value.<p>
     * 
     * @param newID the ID property value to be added
     */
    void addID(String newID);

    /**
     * Removes a ID property value.<p>
     * 
     * @param oldID the ID property value to be removed.
     */
    void removeID(String oldID);



    /* ***************************************************
     * Property http://www.optet.eu/ns/DigitalTrustworthinessCertificate#inTargetOfEvaluation
     */
     
    /**
     * Gets all property values for the inTargetOfEvaluation property.<p>
     * 
     * @returns a collection of values for the inTargetOfEvaluation property.
     */
    Collection<? extends Boolean> getInTargetOfEvaluation();

    /**
     * Checks if the class has a inTargetOfEvaluation property value.<p>
     * 
     * @return true if there is a inTargetOfEvaluation property value.
     */
    boolean hasInTargetOfEvaluation();

    /**
     * Adds a inTargetOfEvaluation property value.<p>
     * 
     * @param newInTargetOfEvaluation the inTargetOfEvaluation property value to be added
     */
    void addInTargetOfEvaluation(Boolean newInTargetOfEvaluation);

    /**
     * Removes a inTargetOfEvaluation property value.<p>
     * 
     * @param oldInTargetOfEvaluation the inTargetOfEvaluation property value to be removed.
     */
    void removeInTargetOfEvaluation(Boolean oldInTargetOfEvaluation);



    /* ***************************************************
     * Property http://www.optet.eu/ns/DigitalTrustworthinessCertificate#type
     */
     
    /**
     * Gets all property values for the type property.<p>
     * 
     * @returns a collection of values for the type property.
     */
    Collection<? extends String> getType();

    /**
     * Checks if the class has a type property value.<p>
     * 
     * @return true if there is a type property value.
     */
    boolean hasType();

    /**
     * Adds a type property value.<p>
     * 
     * @param newType the type property value to be added
     */
    void addType(String newType);

    /**
     * Removes a type property value.<p>
     * 
     * @param oldType the type property value to be removed.
     */
    void removeType(String oldType);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
